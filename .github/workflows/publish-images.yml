name: publish

on:
  pull_request:
    branches:
    - main

  push:
    branches:
    - main

jobs:
  detect-changes:
    runs-on: [ubuntu-20.04]
    outputs:
      all: ${{ steps.filter.outputs.changes }}
      dockerfile-changes: ${{ steps.filter.outputs.Dockerfile }}
      version-changes: ${{ steps.filter.outputs.Version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 10
    - 
      name: changed-dockerfiles
      uses: dorny/paths-filter@v2
      id: filter
      with:
        base: 'main'
        filters: |
          Dockerfile:
            - 'Dockerfile'
          Version:
            - 'version'

  lint_images:
    name: Lint images
    if: github.event_name == 'pull_request' && (needs.detect-changes.outputs.dockerfile-changes != '[]')
    runs-on: [ubuntu-20.04]
    needs: detect-changes
    continue-on-error: true
    strategy:
      matrix:
        dockerfile:
          - Dockerfile
    steps:
      - uses: actions/checkout@v2.3.2
      - name: lint dockerfiles
        run: |
          docker run --rm -i -v ${PWD}:/repo:ro --workdir=/repo ghcr.io/hadolint/hadolint:v2.8.0-alpine sh -c "hadolint --config .hadolint.yaml ${{matrix.dockerfile}}"

  build-push-images:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && (needs.detect-changes.outputs.dockerfile-changes == 'true') && (needs.detect-changes.outputs.version-changes  == 'true')
    runs-on: [ubuntu-20.04]
    needs: detect-changes
    continue-on-error: true
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: set-environment
        id: meta
        run: | 
          VERSION=$(cat version)
          echo "::set-output name=tags::${{ secrets.DOCKER_HUB_USER }}/awscli2-kubectl:${VERSION}"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
